///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (C) 2015 The PakalEngine Open Source Project
// File: IComponentFactory.h
// Original Author: Salvador Noel Romo Garcia.
// Creation Date: 03-sep-2015
//
// Purpose: implementing IFactory for components
//
///////////////////////////////////////////////////////////////////////////////////////////////////////

#pragma once
#include "Factory.h"

namespace Pakal
{
	class Component;	
	///////////////////////////////////////////////////////////////////////////////////////////////////////	
	using IComponentFactory = IFactory<Component>;
	///////////////////////////////////////////////////////////////////////////////////////////////////////
	template <class TBase>
	inline IComponentFactory * CreateComponentFactory( const std::function<Component*()>& _fn)
	{
		return (CreateFactory<Component, TBase>(_fn));
	}
	///////////////////////////////////////////////////////////////////////////////////////////////////////
	template <class TBase, class TImplementation, class TInitializer>
	IComponentFactory * CreateComponentFactory(TInitializer* initializer)
	{
		return CreateComponentFactory<TBase>([=]() -> Component* { return new TImplementation(initializer); });
	};
	///////////////////////////////////////////////////////////////////////////////////////////////////////
	template <class TBase, class TImplementation>
	IComponentFactory * CreateComponentFactory()
	{
		return CreateComponentFactory<TBase>( []() -> Component* { return new TImplementation(); });
	};	
	///////////////////////////////////////////////////////////////////////////////////////////////////////
}